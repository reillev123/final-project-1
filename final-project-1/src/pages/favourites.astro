---
import Layouts from "../layouts/Layouts.astro"
---
<Layouts>
<body>
    <div class="container text-center mt-5">
        <!-- Page title -->
        <title>Favorites</title>
        <!-- Header for the favorites page -->
        <h2>My Favorite Recipes</h2>
        <!-- Container for displaying favorite recipes -->
        <div id="favorites-container" class="row"></div>
    </div>

    <script>
        // Function to retrieve favorite recipes from localStorage
        function getFavoriteRecipes() {
            // Get the 'favourites' item from localStorage
            const favorites = localStorage.getItem('favourites');
            // If 'favourites' exists, parse and return it, otherwise return an empty array
            return favorites ? JSON.parse(favorites) : [];
        }

        // Function to save favorite recipes to localStorage
        function saveFavoriteRecipes(favoriteRecipes) {
            localStorage.setItem('favourites', JSON.stringify(favoriteRecipes));
        }

        // Function to render favorite recipes on the page
        function renderFavoriteRecipes() {
            // Get the container where favorite recipes will be displayed
            const favoritesContainer = document.getElementById("favorites-container");
            // Retrieve the favorite recipes from localStorage
            const favoriteRecipes = getFavoriteRecipes();

            // Clear any previous content in the container
            favoritesContainer.innerHTML = "";

            // Check if there are any favorite recipes
            if (favoriteRecipes.length === 0) {
                // If no favorites, display a message
                favoritesContainer.innerHTML = "<p>No favorite recipes found.</p>";
                return;
            }

            // Iterate over each favorite recipe
            favoriteRecipes.forEach((recipe) => {
                // Create a new div element for each recipe
                const recipesElement = document.createElement("div");
                recipesElement.className = "col-md-4 mb-4"; // Assign Bootstrap column classes for styling
                recipesElement.innerHTML = `
                    <div class="card">
                        <img src="${recipe.image}" class="card-img-top" alt="${recipe.label}">
                        <div class="card-body">
                            <h5 class="card-title">${recipe.label}</h5>
                            <a href="/final-project-1/recipe-details?uri=${encodeURIComponent(recipe.uri)}" class="btn btn-primary mt-2 view-recipe-btn">View Recipe</a>
                            <button class="btn favorite-recipe-btn mt-2" data-uri="${encodeURIComponent(recipe.uri)}" style="color:white;">
                                 <i class="fa-solid fa-heart"></i>
                                 </button>
                        </div>
                    </div>
                `;
                // Append the recipe element to the container
                favoritesContainer.appendChild(recipesElement);
            });

            // Add event listener for view recipe buttons
            document.querySelectorAll('.view-recipe-btn').forEach(button => {
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                    const recipeUri = this.href.split('=')[1];
                    const recipe = favoriteRecipes.find((recipes) => encodeURIComponent(recipes.uri) === recipeUri);
                    localStorage.setItem('currentRecipe', JSON.stringify(recipe));
                    window.location.href = this.href;
                });
            });

            // Add event listener for favorite recipe buttons
            document.querySelectorAll('.favorite-recipe-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const recipeUri = this.getAttribute('data-uri');
                    const recipeIndex = favoriteRecipes.findIndex((recipes) => encodeURIComponent(recipes.uri) === recipeUri);

                    if (recipeIndex !== -1) {
                        // Remove the recipe from the favorites
                        favoriteRecipes.splice(recipeIndex, 1);
                        // Save the updated favorites to localStorage
                        saveFavoriteRecipes(favoriteRecipes);
                        // Optionally, remove the recipe card from the favorites page
                        this.closest('.col-md-4').remove();
                    }
                });
            });
        }

        // Add event listener to run renderFavoriteRecipes when the page is fully loaded
        document.addEventListener('DOMContentLoaded', renderFavoriteRecipes);
    </script>
</body>
</Layouts>